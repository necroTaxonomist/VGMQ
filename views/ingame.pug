extends layout

block content
  p
    button(id="leavebutton") Leave the game
    button(id="abortbutton" disabled) Stop the game

  h2(id="gamestate") Game State

  form(id="settings" hidden)
    h3 Game Settings

    | Number of Games: 
    input(name="num_games" id="num_games" type="number" min="1" max="100" disabled)
    br

    | Game Selection: 
    input(name="game_selection" id="gamesel_random" type="radio" value="random" checked disabled)
    | Random   
    input(name="game_selection" id="gamesel_only_played" type="radio" value="only_played" disabled)
    | Only Played
    br

    | Song Selection: 
    input(name="song_selection" id="songsel_random" type="radio" value="random" checked disabled)
    | Random  
    input(name="song_selection" id="songsel_weight_by_views" type="radio" value="weight_by_views" disabled)
    | Weight by Views  
    input(name="song_selection" id="songsel_weight_by_likes" type="radio" value="weight_by_likes" disabled)
    | Weight by Likes
    br

    | Guess Time (Seconds): 
    input(name="guess_time" id="guess_time" type="number" min="1" max="100" disabled)
    br

    input(name="restrict_difficulty" id="restrict_difficulty" type="checkbox" disabled)
    | Difficulty: 
    span(id="difficulty_span" style={opacity: '0.6'})
      input(name="allow_easy" id="allow_easy" type="checkbox" checked disabled)
      | Easy  
      input(name="allow_medium" id="allow_medium" type="checkbox" checked disabled)
      | Medium  
      input(name="allow_hard" id="allow_hard" type="checkbox" checked disabled)
      | Hard
      br

    input(name="restrict_ratings" id="restrict_ratings" type="checkbox" disabled)
    | Ratings: 
    span(id="ratings_span" style={opacity: '0.6'})
      | Min: 
      input(name="min_rating" id="min_rating" type="number" min="1" max="10" value="1" disabled)
      | Max: 
      input(name="max_rating" id="max_rating" type="number" min="1" max="10" value="10" disabled)
      |  Allow Unrated
      input(name="allow_unrated" id="allow_unrated" type="checkbox" checked disabled)
      br

    input(id="reset_settings" type="button" value="Reset" disabled)
    input(id="submit_settings" type="button" value="Apply" disabled)

  script.
    var restrict_difficulty = document.getElementById("restrict_difficulty");
    var difficulty_span = document.getElementById("difficulty_span");
    var allow_easy = document.getElementById("allow_easy");
    var allow_medium = document.getElementById("allow_medium");
    var allow_hard = document.getElementById("allow_hard");

    restrict_difficulty.onclick = function()
    {
      if (!this.checked)
        difficulty_span.style = "opacity:0.6;";
      else
        difficulty_span.style = "opacity:1.0;";

      allow_easy.disabled = !this.checked;
      allow_medium.disabled = !this.checked;
      allow_hard.disabled = !this.checked;
    };

    var restrict_ratings = document.getElementById("restrict_ratings");
    var ratings_span = document.getElementById("ratings_span");
    var min_rating = document.getElementById("min_rating");
    var max_rating = document.getElementById("max_rating");
    var allow_unrated = document.getElementById("allow_unrated");

    restrict_ratings.onclick = function()
    {
      if (!this.checked)
        ratings_span.style = "opacity:0.6;";
      else
        ratings_span.style = "opacity:1.0;";

      min_rating.disabled = !this.checked;
      max_rating.disabled = !this.checked;
      allow_unrated.disabled = !this.checked;
    };

  p(id="volumecontrols" hidden)
    | Volume: 
    input(id="volume" type="range" min="0" max="100" value="100")

  h1(id="countdown" hidden)

  div(id="videosection" hidden)
    h3(id="videoname") Game Name
    h4(id="songname") Song Name
    div(id="video")
    br
    button(id="reportbutton" disabled) Report Song

  form(id="inputsection" autocomplete="off" hidden)
    p
      div( class="autocomplete")
        label(for="inputbox" id="inputconfirm")
        input(id="inputbox" type="text" placeholder="Game Name" disabled)

  h3 Players

  p(id="readystart" hidden)
    button(id="readybutton") Ready
    button(id="startbutton" disabled) Start

  ul(id="players")

  h3 Spectators
  ul(id="spectators")

  script(src="/socket.io/socket.io.js")
  script(src="/javascript/xhttp.js")
  script(src="/javascript/searchgames.js")
  script(src="/javascript/statemachine.js")
  script(src="/javascript/clientstatemachine.js")
  script(src="https://www.youtube.com/iframe_api")
  script.
    window.addEventListener('load', async function()
      {
        await startClientStateMachine("#{username}", "#{lobby.name}");
      }
    );

    document.getElementById("leavebutton").onclick = leaveGame;
    document.getElementById("abortbutton").onclick = abortGame;

    document.getElementById("reset_settings").onclick = showGameSettings;
    document.getElementById("submit_settings").onclick = submitGameSettings;

    document.getElementById("volume").onchange = updateVolume;

    document.getElementById("reportbutton").onclick = reportSong;

    autocomplete(document.getElementById("inputbox"), submitInput);

    document.getElementById("inputbox").onkeydown = function()
    {
      if (event.keyCode == 13)
      {
        submitInput();
      }
    }
    document.getElementById("inputbox").oninput = changeInput;

    document.getElementById("readybutton").onclick = sendReady;
    document.getElementById("startbutton").onclick = sendStart;

  script.
    function onYouTubeIframeAPIReady()
    {
        var playerSettings = 
        {
          width: 560,
          height: 340,
          playerVars:
          {
            autoplay: 1,
            controls: 0,
            disablekb: 1,
            enablejsapi: 1,
            fs: 0,
            modestbranding: 1,
            playsinline: 1
          }
        };

        // This declaration is in clientstatemachine
        ytPlayer = new YT.Player('video', playerSettings);
    }

  if username == 'Admin'
    p
    input(id="eventinject" type="text")
    input(id="eventinject_button" type="button" value="Inject")
    script.
      document.getElementById("eventinject_button").onclick = async function()
      {
        var input = document.getElementById("eventinject").value;
        await main.handle(input);
      }
      document.getElementById("eventinject").onkeydown = async function()
      {
        if (event.keyCode == 13)
        {
          var input = document.getElementById("eventinject").value;
          await main.handle(input);
        }
      }
